############################################################################
# Make.defs
#
#   Copyright (C) 2014 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#   Copyright 2018 Sony Semiconductor Solutions Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

ifneq ($(wildcard $(TOPDIR)/.config),)
-include $(TOPDIR)/Make.defs
endif

DELIM ?= $(strip /)

# Platforms are: Linux, Darwin, MSYS, CYGWIN

PLATFORM := $(firstword $(subst _, ,$(shell uname -s 2>/dev/null)))

ifeq ($(PLATFORM),CYGWIN)

# Cygwin-native toolchain

CFLAGS += -isystem "$(shell cygpath -w $(SDKDIR)/modules/include)"
CXXFLAGS += -I"$(shell cygpath -w $(SDKDIR)/modules/include)"
INCDIROPT = -w
else
# Linux/macOS/MSYS2-native toolchain
CFLAGS += -isystem $(SDKDIR)/modules/include
CXXFLAGS += -I$(SDKDIR)/modules/include
endif

# mkspk for create spk packaging file

# include path setting in external sub directories which contains 'LibIncludes.mk' file.

ifneq ($(wildcard $(TOPDIR)/.config),)
-include $(SDKDIR)/tools/LibInclude.mk
endif

DEPCONFIG = $(TOPDIR)/.config

ifeq ($(WINTOOL),y)
  LDRAWELFFLAGS += -T "${shell cygpath -w $(SDKDIR)/tools/asmp-elf.ld}"
else
  LDRAWELFFLAGS += -T $(SDKDIR)/tools/asmp-elf.ld
endif
LDRAWELFFLAGS += -u __vectors
LDRAWELFFLAGS += -zmax-page-size=256
LDRAWELFFLAGS += -defsym STACK_SIZE=$(WORKERSTACKSIZE)

ifeq ($(WORKERSTACKSIZE),)
WORKERSTACKSIZE = 1024
endif

# Output map file with cross reference table

ifeq ($(WINTOOL),y)
  LDFLAGS += -Map="${shell cygpath -w $(SDKDIR)/nuttx.map}" --cref
else
  LDFLAGS += -Map=$(SDKDIR)/nuttx.map --cref
endif

ifneq ($(CONFIG_RAM_SIZE),)
ifneq ($(CONFIG_ASMP_MEMSIZE),)
  LDFLAGS += --defsym __stack=_vectors+${shell expr $(CONFIG_RAM_SIZE) \- `printf "%d" $(CONFIG_ASMP_MEMSIZE)`}
else
  LDFLAGS += --defsym __stack=_vectors+$(CONFIG_RAM_SIZE)
endif
endif

# Tools

ifeq ($(DIRLINK),)
ifeq ($(CONFIG_WINDOWS_NATIVE),y)
  DIRLINK   = $(TOPDIR)$(DELIM)tools$(DELIM)link.bat
  DIRUNLINK = $(TOPDIR)$(DELIM)tools$(DELIM)unlink.bat
else ifeq ($(CONFIG_WINDOWS_MSYS),y)
  DIRLINK   = $(TOPDIR)$(DELIM)tools$(DELIM)copydir.sh
  DIRUNLINK = $(TOPDIR)$(DELIM)tools$(DELIM)unlink.sh
else
  DIRUNLINK = $(TOPDIR)$(DELIM)tools$(DELIM)unlink.sh
ifeq ($(WINTOOL),y)
  DIRLINK   = $(TOPDIR)$(DELIM)tools$(DELIM)copydir.sh
else
  DIRLINK   = $(TOPDIR)$(DELIM)tools$(DELIM)link.sh
endif
endif
endif

ifeq ($(INCDIR),)
ifeq ($(CONFIG_WINDOWS_NATIVE),y)
  INCDIR = $(TOPDIR)$(DELIM)tools$(DELIM)incdir.bat
else
  INCDIR = $(TOPDIR)$(DELIM)tools$(DELIM)incdir.sh
endif
endif

ifeq ($(DEFINE),)
ifeq ($(CONFIG_WINDOWS_NATIVE),y)
  DEFINE = $(TOPDIR)$(DELIM)tools$(DELIM)define.bat
else
  DEFINE = $(TOPDIR)$(DELIM)tools$(DELIM)define.sh
endif
endif

ifeq ($(CONFIG_WINDOWS_NATIVE),y)
  MKKCONFIG = $(SDKDIR)$(DELIM)apps$(DELIM)tools$(DELIM)mkkconfig.bat
else
  MKKCONFIG = $(SDKDIR)$(DELIM)apps$(DELIM)tools$(DELIM)mkkconfig.sh
endif

ifeq ($(WINTOOL),y)
  INCDIROPT = -w
endif

CFLAGS   += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" "$(SDKDIR)$(DELIM)system$(DELIM)include"}
CXXFLAGS += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" "$(SDKDIR)$(DELIM)system$(DELIM)include"}

CFLAGS   += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" "$(SDKDIR)$(DELIM)apps$(DELIM)include"}
CXXFLAGS += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" "$(SDKDIR)$(DELIM)apps$(DELIM)include"}
